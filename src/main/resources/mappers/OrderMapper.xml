<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.tawny.shop.order.repository.OrderRepository">
 	
	<insert id="insertOrder" parameterType="map">
 		INSERT INTO
 			`order`
		(
			`userId`
			, `goodsId`
			, `payId`
			, `request`
			, `address`
			, `delivery`
			, `quantity`
			, `totalPrice`
		)
		VALUE
		(
			#{userId}
			, #{goodsId}
			, #{payId}
			, #{request}
			, #{address}
			, #{delivery}
			, #{quantity}
			, #{totalPrice}
		)
 	</insert>
	
	<select id="selectOrderList" resultType="com.tawny.shop.order.domain.Order" parameterType="map">
 		SELECT
 			`id`
 			, `userId`
			, `goodsId`
			, `payId`
			, `delivery`
			, `address`
			, `request`
			, `quantity`
			, `totalPrice`
			, `createdAT`
			, `updatedAT` 
		FROM
			`order`
		WHERE
			`userId` = #{userId} 
		<if test="elapsedTime != 'all'">
			AND createdAT >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
		</if>
		ORDER BY
			`createdAT` DESC;
 	</select>
 	
 	<update id="updateOrderDelivery" parameterType="map">
 		UPDATE
 			`order`
		SET
			`delivery` = #{deliveryStatus}
			, `updatedAT` = now()
		WHERE
			`id` = #{orderId}
 	</update>
 	
 	<select id="selectOrder" resultType="com.tawny.shop.order.domain.Order" parameterType="map">
 		SELECT
 			`id`
 			, `userId`
			, `goodsId`
			, `payId`
			, `delivery`
			, `address`
			, `request`
			, `quantity`
			, `totalPrice`
			, `createdAT`
			, `updatedAT` 
		FROM
			`order`
		WHERE
			`id` = #{orderId}
	</select>
	
	<select id="selectAllOrderList" resultType="com.tawny.shop.order.domain.Order" parameterType="map">
 		SELECT
 			`id`
 			, `userId`
			, `goodsId`
			, `payId`
			, `delivery`
			, `address`
			, `request`
			, `quantity`
			, `totalPrice`
			, `createdAT`
			, `updatedAT` 
		FROM
			`order`
		ORDER BY
			`createdAT` DESC;
 	</select>
		
	<select id="selectOrderByBestGoods" resultType="com.tawny.shop.order.domain.Order" parameterType="int">
 		SELECT
 			`goodsId`
		FROM
			`order`
		GROUP BY
			`goodsId`
		ORDER BY
			SUM(`quantity`) DESC
		LIMIT 3;
 	</select>	
 	
</mapper>